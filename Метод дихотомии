#include <iostream>
#include <cmath>

double example_function(double x) {
    return pow(x, 3) - 0.2 * x * x + 0.5 * x; 
}

double dichotomy_method(double (*f)(double), double a, double b, double epsilon) {
    if (f(a) * f(b) > 0) {
        return NAN; // не число 
    }

    int iterations = 0;
    while ((b - a) / 2 > epsilon) {
        double c = (a + b) / 2;
        iterations++;

        if (f(c) == 0) {
            return c; // найден корень
        } else if (f(a) * f(c) < 0) {
            b = c; // 
        } else {
            a = c; // между c и b
        }
    }

    std::cout << "Количество итераций: " << iterations << std::endl; 
    return (a + b) / 2; // срзнач
}

int main() {
    double a = 0; 
    double b = 3; 
    double epsilon = 1e-10; 

    
    double root = dichotomy_method(example_function, a, b, epsilon);

    // проверка
    if (std::isnan(root)) {
        std::cout << "Корни не найдены в заданном интервале." << std::endl;
    } else {
        std::cout << "Решение уравнения: x = " << root << std::endl; 
        double fun = example_function(root);
        std::cout << "Значение функции: f(" << root << ") = " << fun << std::endl; 
    }

    return 0;
}
