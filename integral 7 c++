#include <iostream>
#include <cmath>
#include <limits>

double f(double x) {
    return (x * x * x * x * x) / sqrt(4 - x * x); // x^5 / sqrt(4 - x^2)
}

double rectangle_method(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = 0.0;
    for (int i = 0; i < n; ++i) {
        sum += f(a + i * h);
    }
    return sum * h;
}

double trapezoidal_method(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = (f(a) + f(b)) / 2.0;
    for (int i = 1; i < n; ++i) {
        sum += f(a + i * h);
    }
    return sum * h;
}

double simpson_method(double a, double b, int n) {
    if (n % 2 == 1) n++; // n должно быть четным
    double h = (b - a) / n;
    double sum = f(a) + f(b);
    
    for (int i = 1; i < n; ++i) {
        if (i % 2 == 0) {
            sum += 2 * f(a + i * h);
        } else {
            sum += 4 * f(a + i * h);
        }
    }
    return sum * h / 3.0;
}

int main() {
    double a = 0.0;
    double b = 2.0;
    int n = 1000; // Начальное количество разбиений
    double result_rect, result_trap, result_simp;

    result_rect = rectangle_method(a, b, n);
    result_trap = trapezoidal_method(a, b, n);
    result_simp = simpson_method(a, b, n);

    std::cout.precision(10);
    std::cout << "Метод прямоугольников: " << result_rect << std::endl;
    std::cout << "Метод трапеций: " << result_trap << std::endl;
    std::cout << "Метод Симпсона: " << result_simp << std::endl;

    return 0;
}
